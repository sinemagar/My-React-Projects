{"ast":null,"code":"var _jsxFileName = \"/home/sinem/Desktop/react/redux/todo-app/client/src/components/Content.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Checkbox, Flex, Spacer, Stack } from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTodoAsync, removeTodoAsync, toggleTodoAsync } from '../redux/todos/services';\nimport { selectFilteredTodos } from '../redux/todos/todosSlice';\nimport ContentFooter from './ContentFooter';\nimport Error from './Error';\nimport Loading from './Loading';\nimport { CloseIcon } from '@chakra-ui/icons'; //let filtered=[];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Content = () => {\n  _s();\n\n  const dispatch = useDispatch(); //filtrede\n\n  const filtredTodos = useSelector(selectFilteredTodos);\n  const isLoading = useSelector(state => state.todos.isLoading);\n  const error = useSelector(state => state.todos.error);\n\n  const handleDestroy = async id => {\n    if (window.confirm(\"Are You Sure?\")) {\n      await dispatch(removeTodoAsync(id));\n    }\n  }; //get api\n\n\n  useEffect(() => {\n    dispatch(getTodoAsync());\n  }, [dispatch]); //toggle \n\n  const handleToggle = async (id, completed) => {\n    await dispatch(toggleTodoAsync({\n      id,\n      data: {\n        completed\n      }\n    }));\n  }; //loading\n\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Error, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 5,\n    bg: \"white\",\n    mt: \"10px\",\n    children: [filtredTodos.map(item => /*#__PURE__*/_jsxDEV(Flex, {\n      mt: \"5px\",\n      mb: \"3px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          size: \"lg\",\n          colorScheme: \"blue\",\n          ml: \"5px\",\n          onChange: () => handleToggle(item.id, !item.completed),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: item.completed ? {\n              textDecoration: \"line-through\",\n              backgroundColor: \" #FFFF00\"\n            } : {\n              color: \"black\"\n            },\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          viewBox: \"0 0 200 200\",\n          color: \"red.500\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"currentColor\",\n            d: \"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(ContentFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Content, \"FhskRV5Uv4ChoRAdtIJ+N8gk3WY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Content;\nexport default Content;\n/*\n\n\nimport { Box, Checkbox, Stack } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction Content() {\n    return (\n        <Stack spacing={5}\n            bg=\"white\" mt=\"10px\"\n        >\n            <Box>\n                <Checkbox size='lg' colorScheme='orange' defaultChecked ml=\"5px\">\n                    Checkbox\n                </Checkbox>\n            </Box>\n            <Box>\n                <Checkbox size='lg' colorScheme='orange' defaultChecked ml=\"5px\">\n                    Checkbox\n                </Checkbox>\n            </Box>\n        </Stack>\n    )\n}\n\nexport default Content\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["Box","Button","Checkbox","Flex","Spacer","Stack","React","useEffect","useSelector","useDispatch","getTodoAsync","removeTodoAsync","toggleTodoAsync","selectFilteredTodos","ContentFooter","Error","Loading","CloseIcon","Content","dispatch","filtredTodos","isLoading","state","todos","error","handleDestroy","id","window","confirm","handleToggle","completed","data","map","item","textDecoration","backgroundColor","color","title"],"sources":["/home/sinem/Desktop/react/redux/todo-app/client/src/components/Content.js"],"sourcesContent":["import { Box, Button, Checkbox, Flex, Spacer, Stack } from '@chakra-ui/react'\nimport React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getTodoAsync, removeTodoAsync, toggleTodoAsync } from '../redux/todos/services'\nimport { selectFilteredTodos } from '../redux/todos/todosSlice'\nimport ContentFooter from './ContentFooter'\nimport Error from './Error'\nimport Loading from './Loading'\nimport { CloseIcon } from '@chakra-ui/icons'\n\n//let filtered=[];\n\nconst Content = () => {\n    const dispatch = useDispatch();\n\n    //filtrede\n    const filtredTodos = useSelector(selectFilteredTodos)\n\n    const isLoading = useSelector(state => state.todos.isLoading)\n    const error = useSelector(state => state.todos.error)\n\n\n\n    const handleDestroy = async (id) => {\n        if (window.confirm(\"Are You Sure?\")) {\n            await dispatch(removeTodoAsync(id));\n        }\n    }\n\n    //get api\n    useEffect(() => {\n        dispatch(getTodoAsync())\n    }, [dispatch])\n\n    //toggle \n    const handleToggle = async (id, completed) => {\n        await dispatch(toggleTodoAsync({ id, data: { completed } }))\n    }\n\n\n    //loading\n    if (isLoading) {\n        return <div>\n            <Loading />\n        </div>\n    }\n    if (error) {\n        return <div>\n            <Error message={error} />\n        </div>\n    }\n\n    return (\n\n        <Stack spacing={5}\n            bg=\"white\" mt=\"10px\"\n        >\n            {/**\n             SLICE DAKI ELEMANLARI MAPLEME\n             */}\n            {filtredTodos.map((item) => (\n                <Flex\n                    key={item.id}\n                    mt=\"5px\"\n                    mb=\"3px\">\n                    <Box   >\n                        <Checkbox\n                            size='lg'\n                            colorScheme='blue'\n                            ml=\"5px\"\n                            onChange={() => handleToggle(item.id, !item.completed)}\n                        >\n                            <p style={item.completed ?\n                                { textDecoration: \"line-through\", backgroundColor: \" #FFFF00\" }\n                                : { color: \"black\" }}>\n                                {item.title}\n                            </p>\n                        </Checkbox>\n                    </Box>\n                    <Spacer />{/*   onClick={() => handleDestroy(item.id)}*/}\n\n                    <Box>\n                        <Icon viewBox='0 0 200 200' color='red.500'>\n                            <path\n                                fill='currentColor'\n                                d='M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0'\n                            />\n                        </Icon>\n                    </Box>\n                </Flex>\n\n            ))}\n\n\n            <ContentFooter />\n\n        </Stack>\n    )\n}\n\nexport default Content\n\n/*\n\n\nimport { Box, Checkbox, Stack } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction Content() {\n    return (\n        <Stack spacing={5}\n            bg=\"white\" mt=\"10px\"\n        >\n            <Box>\n                <Checkbox size='lg' colorScheme='orange' defaultChecked ml=\"5px\">\n                    Checkbox\n                </Checkbox>\n            </Box>\n            <Box>\n                <Checkbox size='lg' colorScheme='orange' defaultChecked ml=\"5px\">\n                    Checkbox\n                </Checkbox>\n            </Box>\n        </Stack>\n    )\n}\n\nexport default Content\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}