{"ast":null,"code":"var _jsxFileName = \"/home/sinem/Desktop/react/redux/chat-app/src/components/FormTodo.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, Input, Alert, AlertIcon, AlertTitle, AlertDescription } from '@chakra-ui/react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux'; //import { store } from '../redux/store'\n\nimport { addTodo } from '../redux/todos/todosSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormTodo() {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    if (e && e.preventDefault) {\n      e.preventDefault();\n    }\n\n    const newId = nanoid();\n    if (!title)\n    /*#__PURE__*/\n    //\n    _jsxDEV(Alert, {\n      status: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: \"You entered empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n        children: \"Please fill.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);else {\n      dispatch(addTodo({\n        id: newId,\n        title,\n        complated: false\n      }));\n    }\n    setTitle(''); //console.log({ id: newId, title, complated: false });\n  }; //console.log(title)\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: \"10px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      bg: \"white\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Let's To do\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, setTitle, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormTodo, \"Q09b2pan9zctLA57K3pbabbCmz4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FormTodo;\nexport default FormTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTodo\");","map":{"version":3,"names":["FormControl","Input","Alert","AlertIcon","AlertTitle","AlertDescription","nanoid","useState","useDispatch","addTodo","FormTodo","title","setTitle","dispatch","handleSubmit","e","preventDefault","newId","id","complated","marginTop","target","value"],"sources":["/home/sinem/Desktop/react/redux/chat-app/src/components/FormTodo.js"],"sourcesContent":["import { FormControl, \n    Input,\n    Alert,\n    AlertIcon,\n    AlertTitle,\n    AlertDescription\n} from '@chakra-ui/react'\nimport { nanoid } from '@reduxjs/toolkit'\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\n\n//import { store } from '../redux/store'\nimport { addTodo } from '../redux/todos/todosSlice'\n\n\nfunction FormTodo() {\n\n    const [title, setTitle] = useState('')\n    const dispatch = useDispatch()\n\n    const handleSubmit = (e) => {\n        if (e && e.preventDefault) { e.preventDefault(); }\n\n        const newId = nanoid();\n       if(!title)(\n        //\n        <Alert status='error'>\n        <AlertIcon />\n        <AlertTitle>You entered empty!</AlertTitle>\n        <AlertDescription>Please fill.</AlertDescription>\n      </Alert>\n\n       )\n       else{\n        dispatch(addTodo({ id:newId , title, complated: false }))\n       }\n        setTitle('')\n        //console.log({ id: newId, title, complated: false });\n    }\n    //console.log(title)\n    return (\n        <form\n            key={setTitle}\n            onSubmit={handleSubmit}\n            style={{ marginTop: \"10px\" }}\n        >\n            <FormControl\n                bg=\"white\"\n            >\n                <Input\n                    placeholder=\"Let's To do\"\n                    value={title}\n                    onChange={(e)=>setTitle(e.target.value)}\n                />\n            </FormControl>\n        </form>\n    )\n}\n\nexport default FormTodo\n"],"mappings":";;;AAAA,SAASA,WAAT,EACIC,KADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,UAJJ,EAKIC,gBALJ,QAMO,kBANP;AAOA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAGA;;AACA,SAASC,OAAT,QAAwB,2BAAxB;;;AAGA,SAASC,QAAT,GAAoB;EAAA;;EAEhB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMM,QAAQ,GAAGL,WAAW,EAA5B;;EAEA,MAAMM,YAAY,GAAIC,CAAD,IAAO;IACxB,IAAIA,CAAC,IAAIA,CAAC,CAACC,cAAX,EAA2B;MAAED,CAAC,CAACC,cAAF;IAAqB;;IAElD,MAAMC,KAAK,GAAGX,MAAM,EAApB;IACD,IAAG,CAACK,KAAJ;IAAU;IACT;IACA,QAAC,KAAD;MAAO,MAAM,EAAC,OAAd;MAAA,wBACA,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,UAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA,QAAC,gBAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFS,CAAV,KASI;MACHE,QAAQ,CAACJ,OAAO,CAAC;QAAES,EAAE,EAACD,KAAL;QAAaN,KAAb;QAAoBQ,SAAS,EAAE;MAA/B,CAAD,CAAR,CAAR;IACA;IACAP,QAAQ,CAAC,EAAD,CAAR,CAhBwB,CAiBxB;EACH,CAlBD,CALgB,CAwBhB;;;EACA,oBACI;IAEI,QAAQ,EAAEE,YAFd;IAGI,KAAK,EAAE;MAAEM,SAAS,EAAE;IAAb,CAHX;IAAA,uBAKI,QAAC,WAAD;MACI,EAAE,EAAC,OADP;MAAA,uBAGI,QAAC,KAAD;QACI,WAAW,EAAC,aADhB;QAEI,KAAK,EAAET,KAFX;QAGI,QAAQ,EAAGI,CAAD,IAAKH,QAAQ,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV;MAH3B;QAAA;QAAA;QAAA;MAAA;IAHJ;MAAA;MAAA;MAAA;IAAA;EALJ,GACSV,QADT;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GA1CQF,Q;UAGYF,W;;;KAHZE,Q;AA4CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}