{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; //get proc\n\nexport const getTodoAsync = createAsyncThunk('todos/getTodoAsync', async () => {\n  const res = await axios(`${process.env.REACT_APP_API_BASE_ENDPOINT}/todos`);\n  return res.data;\n}); //post proc\n\nexport const addTodoAsync = createAsyncThunk('todos/addTodoAsync', async data => {\n  const res = await axios.post(`${process.env.REACT_APP_API_BASE_ENDPOINT}/todos`, data);\n  return res.data;\n}); //toggle proc\n\nexport const toggleTodoAsync = createAsyncThunk('todos/toggleTodoAsync', async _ref => {\n  let {\n    id,\n    data\n  } = _ref;\n  const res = await axios.patch(`${process.env.REACT_APP_API_BASE_ENDPOINT}/todos/${id}`, data);\n  return res.data;\n}); //delete proc\n\nexport const removeTodoAsync = createAsyncThunk('todos/removeTodoAsync', async id => {\n  const res = await axios.delete(`${process.env.REACT_APP_API_BASE_ENDPOINT}/${id}`);\n  return res.data;\n});\nexport const todosSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null,\n    activeFilter: 'all',\n    addNewTodoIsLoading: false,\n    addNewTodoError: null\n  },\n  reducers: {\n    /*\n            toggle: (state, action) => {\n                const { id } = action.payload;\n                const item = state.items.find((item) => item.id === id);\n                item.completed = !item.completed\n            },*/\n\n    /*\n    destroy: (state, action) => {\n        const id = action.payload;\n        //silinmek istenen item dışı tüm itemları filtreleme\n        const filtered = state.items.filter((item) => item.id !== id)\n        //filtrelenen item ı state olarak verme\n        state.items = filtered;\n    },*/\n    changeActiveFilter: (state, action) => {\n      state.activeFilter = action.payload;\n    },\n    //button, cleaning\n    clearCompleted: state => {\n      const filtered = state.items.filter(item => item.completed === false);\n      state.items = filtered;\n    }\n  },\n  extraReducers: {\n    //gettodos\n    [getTodoAsync.pending]: (state, action) => {\n      state.isLoading = true;\n    },\n    [getTodoAsync.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.isLoading = false;\n    },\n    [getTodoAsync.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n    },\n    //addtodo \n    [addTodoAsync.pending]: (state, action) => {\n      state.addNewTodoIsLoading = true;\n    },\n    [addTodoAsync.fulfilled]: (state, action) => {\n      state.items.push(action.payload);\n      state.addNewTodoIsLoading = false;\n    },\n    [addTodoAsync.rejected]: (state, action) => {\n      state.addNewTodoIsLoading = false;\n      state.addNewTodoError = action.error.message;\n    },\n    //toggle todo\n    [toggleTodoAsync.fulfilled]: (state, action) => {\n      const {\n        id,\n        completed\n      } = action.payload;\n      const index = state.items.findIndex(item => item.id === id);\n      state.items[index].completed = completed;\n    },\n    //remove todo\n    [removeTodoAsync.fulfilled]: (state, action) => {\n      console.log(action.payload);\n    }\n  }\n}); //Selectors\n\nexport const selectTodos = state => state.todos.items; //all filtered\n\nexport const selectFilteredTodos = state => {\n  if (state.todos.activeFilter === \"all\") {\n    return state.todos.items;\n  }\n\n  return state.todos.items.filter(todo => state.todos.activeFilter === 'active' ? todo.completed === false : todo.completed === true);\n};\nexport const selectActiveFilter = state => state.todos.activeFilter;\nexport const {\n  changeActiveFilter,\n  clearCompleted\n} = todosSlice.actions;\nexport default todosSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","getTodoAsync","res","process","env","REACT_APP_API_BASE_ENDPOINT","data","addTodoAsync","post","toggleTodoAsync","id","patch","removeTodoAsync","delete","todosSlice","name","initialState","items","isLoading","error","activeFilter","addNewTodoIsLoading","addNewTodoError","reducers","changeActiveFilter","state","action","payload","clearCompleted","filtered","filter","item","completed","extraReducers","pending","fulfilled","rejected","message","push","index","findIndex","console","log","selectTodos","todos","selectFilteredTodos","todo","selectActiveFilter","actions","reducer"],"sources":["/home/sinem/Desktop/react/redux/todo-app/client/src/redux/todos/todosSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n\n//get proc\nexport const getTodoAsync = createAsyncThunk('todos/getTodoAsync', async () => {\n    const res = await axios(`${process.env.REACT_APP_API_BASE_ENDPOINT}/todos`);\n    return res.data\n\n})\n\n\n//post proc\nexport const addTodoAsync = createAsyncThunk('todos/addTodoAsync', async (data) => {\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_ENDPOINT}/todos`, data);\n    return res.data\n})\n\n//toggle proc\n\nexport const toggleTodoAsync = createAsyncThunk('todos/toggleTodoAsync', async ({ id, data }) => {\n    const res = await axios.patch(`${process.env.REACT_APP_API_BASE_ENDPOINT}/todos/${id}`, data);\n    return res.data\n\n})\n//delete proc\nexport const removeTodoAsync =createAsyncThunk('todos/removeTodoAsync',async(id)=>{\n    const res = await axios.delete(`${process.env.REACT_APP_API_BASE_ENDPOINT}/${id}`);\n    return res.data\n\n\n})\n\n\nexport const todosSlice = createSlice({\n    name: 'todos',\n    initialState: {\n        items: [],\n        isLoading: false,\n        error: null,\n        activeFilter: 'all',\n        addNewTodoIsLoading: false,\n        addNewTodoError: null,\n\n    },\n    reducers: {\n\n/*\n        toggle: (state, action) => {\n            const { id } = action.payload;\n            const item = state.items.find((item) => item.id === id);\n            item.completed = !item.completed\n        },*/\n        /*\n        destroy: (state, action) => {\n            const id = action.payload;\n            //silinmek istenen item dışı tüm itemları filtreleme\n            const filtered = state.items.filter((item) => item.id !== id)\n            //filtrelenen item ı state olarak verme\n            state.items = filtered;\n        },*/\n        changeActiveFilter: (state, action) => {\n            state.activeFilter = action.payload;\n        },\n        //button, cleaning\n        clearCompleted: (state) => {\n            const filtered = state.items.filter((item => item.completed === false));\n\n            state.items = filtered;\n\n        },\n\n    },\n    extraReducers: {\n        //gettodos\n        [getTodoAsync.pending]: (state, action) => {\n            state.isLoading = true;\n        },\n        [getTodoAsync.fulfilled]: (state, action) => {\n            state.items = action.payload;\n            state.isLoading = false;\n        },\n        [getTodoAsync.rejected]: (state, action) => {\n            state.isLoading = false;\n            state.error = action.error.message;\n        },\n        //addtodo \n        [addTodoAsync.pending]: (state, action) => {\n            state.addNewTodoIsLoading = true;\n        },\n        [addTodoAsync.fulfilled]: (state, action) => {\n            state.items.push(action.payload);\n            state.addNewTodoIsLoading = false;\n        },\n        [addTodoAsync.rejected]: (state, action) => {\n            state.addNewTodoIsLoading = false;\n            state.addNewTodoError = action.error.message;\n        },\n\n        //toggle todo\n        [toggleTodoAsync.fulfilled]:(state,action)=>{\n            const {id,completed}=action.payload;\n            const index=state.items.findIndex(item =>item.id===id);\n            state.items[index].completed=completed;\n        },\n        //remove todo\n        [removeTodoAsync.fulfilled]:(state,action)=>{\n            console.log(action.payload);\n        },\n\n    }\n})\n\n\n//Selectors\nexport const selectTodos = (state) => state.todos.items;\n\n//all filtered\nexport const selectFilteredTodos = (state) => {\n    if (state.todos.activeFilter === \"all\") {\n        return state.todos.items;\n    }\n\n    return state.todos.items.filter((todo) =>\n        state.todos.activeFilter === 'active'\n            ? todo.completed === false\n            : todo.completed === true\n    )\n}\n\nexport const selectActiveFilter = (state) => state.todos.activeFilter\n\nexport const { changeActiveFilter, clearCompleted } = todosSlice.actions;\nexport default todosSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}